//---------------------------------------------------------------------------
// Rigging toolkit - MEL Script
//---------------------------------------------------------------------------
//Copyright (c) 2017 Romain Truchard : artstation.com/artist/romaintruc
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of
//this software and associated documentation files (the "Software"), to deal in
//the Software without restriction, including without limitation the rights to
//use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
//the Software, and to permit persons to whom the Software is furnished to do so,
//subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
//FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
//COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
//IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
//CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// DESCRIPTION:
//      Rigging toolkit    
//
// AUTHOR:
//      Romain Truchard - truchard.romain@gmail.com
//----------------------------------------------------------------------------

if (`window -exists rigTK`) deleteUI rigTK;

window  -title "Rigging toolkit 1.0 "  rigTK;

rowColumnLayout -nc 1 -cw 1 285;

// UI ------------------------------------------------------------------------------


tabLayout tabList;


// ---------------------------------------------------------------------------------
//                                         Tab 1                                    
// ---------------------------------------------------------------------------------



string $tab1 = `columnLayout -w 275 -h 475 firstTab`;

frameLayout -w 275 one;     

separator -style "in" -w 275 -h 20;

    //NubsTextCreator------------------------------------------------------------
    
    rowColumnLayout -nc 1 -cw 1 275;
    
        text -label "Nurbs Text Creator";
        separator -style "none" -w 275 -h 10;
        textField userTxt;
        text -label "";
        button -label "Create Nurbs text" -command "setTxt()";
    
     setParent..;
    
    //End------------------------------------------------------------------------
    

separator -style "in" -w 275 -h 20;


    //NurbsShapes----------------------------------------------------------------
    
        text -label "Nurbs shapes";
        text -l "";
    
    rowLayout -nc 6;
    
        button -label "Joystick" -w 50 -h 20 -command "joystick"  ;
        button -label "Slider" -w 50 -h 20 -command "slider"  ;
        button -label "Square" -w 50 -h 20 -command "square"  ;
        button -label "Cube" -w 38 -h 20 -command "cube"  ;
        button -label "Arrow" -w 45 -h 20 -command "arrow"  ;
        button -label "Pin" -w 30 -h 20 -command "pin"  ;
    
    setParent ..;
    
    
    rowLayout -nc 6;
    
        button -label "Orient" -c "orient" -w 44 -h 20  ;
        button -label "Cone" -c "coneShape" -w 38 -h 20 ;
        button -label "Cross" -c "crossShape" -w 40 -h 20  ;
        button -label "Rotate" -c "rotShape" -w 50 -h 20  ;
        button -label "Sphere" -c"sphereShape" -w 45 -h 20 ;
        button -label "Move" -c"moveShape" -w 50 -h 20  ;
     
    setParent ..;
    
    //End------------------------------------------------------------------------
    
    
    //ColorMaker------------------------------------------------------------------------
    
    separator -style "in" -w 275 -h 20;
    

        text -label "Color picker";
        text -l "";

  

    rowLayout -nc 13;
    
        button -label "" -w 26 -h 22 -command "red;" -bgc 1 0.224 0.224 buttonSetRed;
        button -label "" -w 26 -h 22 -command "redPale;" -bgc 1 0.399 0.321 buttonSetLRed;
        button -label "" -w 26 -h 22 -command "orange;" -bgc 1 0.479 0.173 buttonSetOrange;
        button -label "" -w 26 -h 22 -command "yellow;" -bgc 1 1 0.390 buttonSetYellow;   
        button -label "" -w 26 -h 22 -command "green;" -bgc 0.527 1 0.276 buttonSetGreen;    
        button -label "" -w 26 -h 22 -command "cyan;" -bgc 0.321 1 0.869 buttonSetCyan; 
        button -label "" -w 26 -h 22 -command "blue;" -bgc 0.256 0.628 1 buttonSetBlue; 
        button -label "" -w 26 -h 22 -command "pink;" -bgc 1 0.442 0.706 buttonSetPink;     
        button -label "" -w 26 -h 22 -command "purple;" -bgc 0.466 0.200 0.892 buttonSetViolet2; 
        button -label "R" -w 26 -h 22 -command "nocolor;" buttonSetViolet;

    setParent ..;
    
    radioButtonGrp -nrb 3 -cw 1 110 -cw 2 110 -cw 3 90 -labelArray3 "Viewport" "Outliner" "Both" -select 1 colorRadio;
    
     //End------------------------------------------------------------------------



separator -style "in" -w 275 -h 20;
text -label "Locking";
        text -l "";


    rowLayout -nc 10;
        
        button -label "Normal" -w 90 -h 22 -command "normal;" abc;
        button -label "Template" -w 90 -h 22 -command "template;" bac;
        button -label "Reference" -w 90 -h 22 -command "reference;" cab;
    
    setParent ..;



    
setParent..;

setParent..;


// ---------------------------------------------------------------------------------
//                                         Tab 2
// ---------------------------------------------------------------------------------


string $tab2 = `columnLayout -w 275 -h 400 secondTab`;

frameLayout -w 275 two;

separator -style "in" -w 275 -h 20;

text -label "Create joint and place it :";

    //JointUtilities-------------------------------------------------------------
    
    rowColumnLayout -nc 2 -cw 1 138 -cw 2 138;
        
        button -label "To vertex" -c "jointOnAllVtx" jointToVetex;
        button -label "To center of selection" -c "jointCenter" mySlider;
        
    setParent..;
    
    //End------------------------------------------------------------------------
    
separator -style "in" -w 275 -h 20;
   
    //JointSize------------------------------------------------------------------
    
        text -label "Set joint size";
        text -label "";
        
    rowColumnLayout -nc 2 -cw 1 60 -cw 2 100;
    
        text -l "Radius:  " -al "right";
        floatSliderGrp -min 0 -max 100 -w 200 -field true userSize;
    
    setParent "..";
    
    rowLayout -nc 10;
    
        button -label ".25" -w 26 -h 20 -command "radPoint25;"  buttonRadPoint25;
        button -label ".5" -w 26 -h 20 -command "radPoint5;"  buttonRadPoint5;
        button -label ".75" -w 26 -h 20 -command "radPoint75;"  buttonRadPoint75;
        button -label "1" -w 26 -h 20 -command "rad1;"  buttonRad1;
        button -label "5" -w 26 -h 20 -command "rad5;"  buttonRad5;
        button -label "10" -w 26 -h 20 -command "rad10;"  buttonRad10;
        button -label "20" -w 26 -h 20 -command "rad20;"  buttonRad20;
        button -label "30" -w 26 -h 20 -command "rad30;"  buttonRad30;
        button -label "40" -w 26 -h 20 -command "rad40;"  buttonRad40;
        button -label "50" -w 26 -h 20 -command "rad50;"  buttonRad50;
        
    setParent ..;
    
        button -l "Resize joints" -c "setJointSize()";
    
    //End------------------------------------------------------------------------


setParent..;

setParent..;


// ---------------------------------------------------------------------------------
//                                         Tab 3
// ---------------------------------------------------------------------------------


string $tab3 = `columnLayout -w 275 -h 400 thirdTab`;

frameLayout -w 275 three;

    //NameCreator--------------------------------------------------------------------
       
    rowColumnLayout -nc 2 -cw 1 50 -cw 2 225;
        
        text -l "Name: " -al "right";
        textField -tx "" tfSuffix;
    	
    setParent "..";
    	    
    rowLayout -nc 7;
    
        button -label "_left" -w 35 -h 20 -command "leftAppend";
        button -label "_right" -w 40 -h 20 -command "rightAppend" ;
        button -label "_top" -w 30 -h 20 -command "upAppend" ;
        button -label "_bottom" -w 50 -h 20 -command "bottomAppend";
        button -label "_center" -w 55 -h 20 -command "middleAppend";
        button -label "_IK" -w 25 -h 20 -command "ikAppend";
        button -label "_FK" -w 25 -h 20 -command "fkAppend";  
    
    setParent ..;
    
    rowLayout -nc 7;
    
        button -label "_L" -w 25 -h 20 -command "lAppend";
        button -label "_R" -w 25 -h 20 -command "rAppend" ;
        button -label "_joint" -w 50 -h 20 -command "jointAppend" ;
        button -label "_back" -w 45 -h 20 -command "backAppend";
        button -label "_front" -w 45 -h 20 -command "frontAppend";
        button -label "_blue" -w 35 -h 20 -command "blueAppend";
        button -label "_red" -w 35 -h 20 -command "redAppend";
        
    setParent ..;
       
        radioButtonGrp -nrb 2 -cw 1 60 -cw 2 60 -label "                       " -labelArray2 "Create" "Append" -select 1 nameRadio;
        
    separator -style "in" -w 275 -h 20;
    	
    	button -l "Add Suffix" -al "center" -w 275 -c ("cR_doRename(2);") butSuffix;
    	button -l "Add Prefix" -al "center" -w 275 -c ("cR_doRename(1);") butPrefix;
    
    separator -style "in" -w 275 -h 20;	
    	
    rowColumnLayout -nc 2 -cw 1 50 -cw 2 225;
    
        text -l "Replace: " -al "right";
        textField -tx "" tfReplace;
    
    setParent "..";
    	   
        button -l "Search And Replace" -al "center" -w 275 -c ("cR_doRename(0);") butSearchReplace;
        intField -v 1 -w 60 -min 0 -vis false ifNumber;
        intField -v 0 -w 60 -min 0 -vis false ifPadding;
        
        button -l "Increment Name" -al "center" -w 275 -c "incrementName" butIncrmnt;
        
        
     separator -style "in" -w 275 -h 20;
        
    //End------------------------------------------------------------------------
    
setParent..;


// ---------------------------------------------------------------------------------
//                         ----------Build Window----------
// ---------------------------------------------------------------------------------


tabLayout -edit
-tabLabel $tab1 "Tools" 
-tabLabel $tab2 "Joints" 
-tabLabel $tab3 "Naming" 
tabList;

frameLayout -e -w 275 one;

showWindow rigTK;


// ---------------------------------------------------------------------------------
//                         ----------Functions----------
// ---------------------------------------------------------------------------------





proc template(){
    
    string $selection[] = `ls -selection -flatten`;
    for($thing in $selection){
    select $thing;
    setAttr ($thing + ".overrideEnabled") 1 ;
    setAttr ($thing + ".overrideDisplayType") 1 ;}
         
}


proc reference(){

    string $selection[] = `ls -selection -flatten`;
    for($thing in $selection){
    select $thing;
    setAttr ($thing + ".overrideEnabled") 1 ;
    setAttr ($thing + ".overrideDisplayType") 2 ;}
         
}

proc normal(){

    string $selection[] = `ls -selection -flatten`;
    for($thing in $selection){
    select $thing;
    setAttr ($thing + ".overrideEnabled") 0 ;
    setAttr ($thing + ".overrideDisplayType") 0 ;
    }
         
}





//JoystickCreator

proc joystick(){



curve -n "crv_temp1" -p 1.0  -1.0  0.0  -p  1.0  1.0  0.0  -p -1.0  1.0  -0.0 -p  -1.0  -1.0  -0.0  -p  1.0  -1.0  0.0 -d 1; 

curve -n "crv_temp2" -p 0.0 1.0 0.0 -p 0.0 0.967 0.0 -p 0.0 0.933 0.0 -p 0.0 0.9 0.0 -d 3;

curve -n "crv_temp3" -p 1.0 -0.0 0.0 -p 0.967 -0.0 0.0 -p 0.933 -0.0 0.0 -p 0.9 -0.0 0.0 -d 3;

curve -n "crv_temp4" -p -0.0 -1.0 0.0 -p -0.0 -0.967 0.0 -p -0.0 -0.933 0.0 -p -0.0 -0.9 0.0 -d 3;

curve -n "crv_temp5" -p -1.0 -0.0 0.0 -p -0.967 -0.0 0.0 -p -0.933 -0.0 0.0 -p -0.9 -0.0 0.0 -d 3;

curve -n "crv_temp6" -p 0.0 0.3 0.0 -p 0.0 0.233 0.0 -p 0.0 0.167 0.0 -p 0.0 0.1 0.0 -d 3;

curve -n "crv_temp7" -p 0.3 -0.0 0.0 -p 0.233 -0.0 0.0 -p 0.167 -0.0 0.0 -p 0.1 -0.0 0.0 -d 3;

curve -n "crv_temp8" -p -0.0 -0.3 0.0 -p -0.0 -0.233 0.0 -p -0.0 -0.167 0.0 -p -0.0 -0.1 0.0 -d 3;

curve -n "crv_temp9" -p -0.3 0.0 0.0 -p -0.233 -0.0 0.0 -p -0.167 -0.0 0.0 -p -0.1 -0.0 0.0 -d 3;



circle -n "control_tmp";

curve -n "crv_temp10" -p -0.035 0.035 0.0 -p -0.012 0.012 0.0 -p 0.012 -0.012 0.0 -p 0.035 -0.035 0.0 -d 3;

curve -n "crv_temp11" -p -0.035 -0.035 0.0 -p -0.012 -0.012 0.0 -p 0.012 0.012 0.0 -p 0.035 0.035 0.0 -d 3;

setAttr "control_tmp.scale"  .1 .1 .1 ;

FreezeTransformations;

group  -name "joystick_temp" "crv_temp1" "crv_temp2" "crv_temp3" "crv_temp4" "crv_temp5" "crv_temp6" "crv_temp7" "crv_temp8" "crv_temp9" ;

string $shapes[] = `ls -shapes -dag "joystick_temp"`; //selectionne juste les shapes du textShape transform dag important !

select -hi;

select $shapes;

select -add "joystick_temp";

parent -r -s;

group  -name "ctrl_tmp" "crv_temp10" "crv_temp11";

string $shapesCtrl[] = `ls -shapes -dag "ctrl_tmp"`; //selectionne juste les shapes du textShape transform dag important !

select -hi;

select $shapesCtrl;

select -add "ctrl_tmp";

parent -r -s;

select "crv_temp*";

doDelete;

select -r "control_tmp";

FreezeTransformations;

select $shapesCtrl;

select -add "control_tmp";

parent -r -s;

select "ctrl_tmp";

doDelete;

transformLimits -tx -1 1 -etx 1 1 control_tmp;
transformLimits -ty -1 1 -ety 1 1 control_tmp;
transformLimits -tz 0 0 -etz 1 1 control_tmp;

setAttr -lock true -keyable false -channelBox false "control_tmp.rx";
setAttr -lock true -keyable false -channelBox false "control_tmp.ry";
setAttr -lock true -keyable false -channelBox false "control_tmp.rz";

setAttr -lock true -keyable false -channelBox false "control_tmp.sx";
setAttr -lock true -keyable false -channelBox false "control_tmp.sy";
setAttr -lock true -keyable false -channelBox false "control_tmp.sz";

setAttr -lock true -keyable false -channelBox false "control_tmp.tz";

setAttr  "joystick_temp.overrideEnabled" 1;
setAttr  "joystick_temp.overrideColor" 18;

setAttr  "control_tmp.overrideEnabled" 1;
setAttr  "control_tmp.overrideColor" 17;


select -r "control_tmp";
select -add "joystick_temp";



Parent;

rename "control_tmp" "controller";
rename "joystick_temp" "Joystick";

select -cl;









}

//SliderCreator

proc slider(){

curve -n "control_temp" -p -0.3 -0.07 0.0 -p -0.1 -0.07 0.0 -p -0.1 -0.035 0.0 -p 0.1 0.0 0.0 -p -0.1 0.035 0.0 -p -0.1 0.07 0.0 -p -0.3 0.07 0.0 -p -0.3 -0.07 0.0 -d 1;

xform -pivots 0.1 0 0 "control_temp";

setAttr  "control_temp.overrideEnabled" 1;
setAttr  "control_temp.overrideColor" 17;

select -r "control_temp";

FreezeTransformations;



transformLimits -tx 0 0 -etx 1 1 control_temp;
transformLimits -ty -1 1 -ety 1 1 control_temp;
transformLimits -tz 0 0 -etz 1 1 control_temp;

setAttr -lock true -keyable false -channelBox false "control_temp.rx";
setAttr -lock true -keyable false -channelBox false "control_temp.ry";
setAttr -lock true -keyable false -channelBox false "control_temp.rz";

setAttr -lock true -keyable false -channelBox false "control_temp.sx";
setAttr -lock true -keyable false -channelBox false "control_temp.sy";
setAttr -lock true -keyable false -channelBox false "control_temp.sz";

setAttr -lock true -keyable false -channelBox false "control_temp.tz";
setAttr -lock true -keyable false -channelBox false "control_temp.tx";
//create slider shape start

curve -n "crv_temp1" -p 0.1 -1.0 0.0 -p 0.1 1.0 0.0 -p -0.1 1.0 0.0 -p -0.1 -1.0 0.0 -p 0.1 -1.0 0.0 -d 1; //cadre

curve -n "crv_temp2" -p 0.1 0.8 -0.0 -p 0.067 0.8 -0.0 -p 0.033 0.8 -0.0 -p 0.0 0.8 -0.0 -d 3; //1

curve -n "crv_temp3" -p 0.1 0.6 -0.0 -p 0.067 0.6 -0.0 -p 0.033 0.6 -0.0 -p 0.0 0.6 -0.0 -d 3; //2

curve -n "crv_temp4" -p 0.1 0.4 -0.0 -p 0.067 0.4 -0.0 -p 0.033 0.4 -0.0 -p 0.0 0.4 -0.0 -d 3; //3

curve -n "crv_temp5" -p 0.1 0.2 -0.0 -p 0.067 0.2 -0.0 -p 0.033 0.2 -0.0 -p 0.0 0.2 -0.0 -d 3; //4

curve -n "crv_temp6" -p 0.1 -0.0 -0.0 -p 0.067 -0.0 -0.0 -p 0.033 -0.0 -0.0 -p 0.0 -0.0 -0.0 -d 3; //5

curve -n "crv_temp7" -p 0.1 -0.2 -0.0 -p 0.067 -0.2 -0.0 -p 0.033 -0.2 -0.0 -p 0.0 -0.2 -0.0 -d 3; //6

curve -n "crv_temp8" -p 0.1 -0.4 -0.0 -p 0.067 -0.4 -0.0 -p 0.033 -0.4 -0.0 -p 0.0 -0.4 -0.0 -d 3; //7

curve -n "crv_temp9" -p 0.1 -0.6 -0.0 -p 0.067 -0.6 -0.0 -p 0.033 -0.6 -0.0 -p 0.0 -0.6 -0.0 -d 3; //8

curve -n "crv_temp10" -p 0.1 -0.8 -0.0 -p 0.067 -0.8 -0.0 -p 0.033 -0.8 -0.0 -p 0.0 -0.8 -0.0 -d 3; //9

group  -name "slider_temp" "crv_temp1" "crv_temp2" "crv_temp3" "crv_temp4" "crv_temp5" "crv_temp6" "crv_temp7" "crv_temp8" "crv_temp9" "crv_temp10"  ;

string $shapes[] = `ls -shapes -dag "slider_temp"`; //selectionne juste les shapes du textShape transform dag important !

select -hi;

select $shapes;

select -add "slider_temp";

parent -r -s;

select "crv_temp*";

doDelete;

//create slider shape end

setAttr  "slider_temp.overrideEnabled" 1;
setAttr  "slider_temp.overrideColor" 18;

select -r "control_temp";

select -add "slider_temp";

Parent;

rename "control_temp" "controller";
rename "slider_temp" "Slider";

select -cl;

}

//FrameCreator

proc frame(){
    
$c = `curve -d 1 -p -1.456834653e-016 -0.6561 0.6561 -p 1.456834653e-016 0.6561 0.6561 -p 1.456834653e-016 0.6561 -0.6561 -p -1.456834653e-016 -0.6561 -0.6561 -p -1.456834653e-016 -0.6561 0.6561`;
  
}

//textCreator------- 

proc setTxt() {
    
   $value = `textField -query -tx userTxt`;//2
    
   textCurves -f "Helvetica" -t $value -n "text" ;
    
   string $shapes[] = `ls -shapes -dag "textShape"`; //selectionne juste les shapes du textShape transform dag important !
   
   select -hi;
   
   FreezeTransformations;
   
   CreateEmptyGroup;
    
   select $shapes;
   
   renameSelectionList ("crv") ;
   
   select "crv*";
   
   select -add "null1";
   
   parent -r -s;
   
   select "textShape";
   
   doDelete;
   
   select "crv*";
   
   renameSelectionList ("curve") ;
   
   select "null1";
   
   rename $value;

   CenterPivot;
 
         
}


//-------------

proc jointCenter(){
    

ConvertSelectionToVertices;
 
string $vertices[] = `ls -selection -flatten`;
 
int $totalVertices = size($vertices);
 
float $xPosSum = 0;
float $yPosSum = 0;
float $zPosSum = 0;
 
for ($vertex in $vertices)
{
        float $worldSpacePos[] = `xform -q -worldSpace -translation $vertex`;
 
        $xPosSum += $worldSpacePos[0];
        $yPosSum += $worldSpacePos[1];
        $zPosSum += $worldSpacePos[2];
}
 
float $xAvgPos = $xPosSum / $totalVertices;
float $yAvgPos = $yPosSum / $totalVertices;
float $zAvgPos = $zPosSum / $totalVertices;

joint -position $xAvgPos $yAvgPos $zAvgPos;
CenterPivot;
  
}




proc jointOnAllVtx(){


ConvertSelectionToVertices;
 
string $selVerts[] = `ls -selection -flatten`;

for($vrts in $selVerts){
    
    //selectionner chaque vertex
    select $vrts;
    // creer cluster sur chaque vertex selectionnée
    string $cl[] = `newCluster "-relative -envelope 1"`;
    // clear selection so joint not parented to cluster
    select -cl;
    //create joint
    string $jnt = `joint`;
    //point constrain to the cluster
    string $ptCnjnt[] = `pointConstraint -offset 0 0 0 -weight 1 $cl $jnt`;
    //find point constraint
    string $findPtCn[] = `listRelatives -typ pointConstraint $jnt`;
    //delete point constraint
    select $findPtCn[0]; doDelete;
    //select cluster delete it
    select -replace $cl; doDelete;
    
    }

}



proc left(){

string $selJnts[] = `ls -selection -flatten`;

for($jnts in $selJnts){
    
    //selectionner chaque vertex
    select $jnts;
    rename ($jnts + "_Left") ;
    
    
    }
}


proc right(){

string $selJnts[] = `ls -selection -flatten`;

for($jnts in $selJnts){
    
    //selectionner chaque vertex
    select $jnts;
    rename ($jnts + "_Right") ;
    
    
    }
}



proc arm(){

rename "Arm";


}



proc radPoint25(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") .25 ;} }
proc radPoint5(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") .5 ;} }
proc radPoint75(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") .75 ;} }
proc rad1(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") 1 ;} }
proc rad5(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") 5 ;} }
proc rad10(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") 10 ;} }
proc rad20(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") 20 ;} }
proc rad30(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") 30 ;} }
proc rad40(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") 40 ;} }
proc rad50(){ string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") 50 ;} }

proc setJointSize() {
  
  float $dist = `floatSliderGrp	 -q -value userSize`;
  string $selJnts[] = `ls -selection -flatten`; for($jnts in $selJnts){ select $jnts; setAttr ($jnts + ".radius") $dist ;}
}



proc red(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 13 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 0.224 0.224 ; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 13 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 0.224 0.224 ; 
    }
    }
              
}

proc redPale(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 4 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 0.399 0.321 ; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 4 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 0.399 0.321 ; 
    }
    }
              
}

proc orange(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 21 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 0.479 0.173 ; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 21 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 0.479 0.173 ; 
    }
    }
              
}

proc yellow(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 17 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 1 0.390 ; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 17 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor") 1 1 0.390 ; 
    }
    }
              
}


proc green(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 14 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.527 1 0.276 ; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 14 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.527 1 0.276; 
    }
    }
              
}


proc cyan(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 18 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.321 1 0.869 ; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 18 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.321 1 0.869; 
    }
    }
              
}

proc blue(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 6 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.256 0.628 1; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 6 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.256 0.628 1; 
    }
    }
              
}

proc pink(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 9 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")1 0.442 0.706; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 9 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")1 0.442 0.706; 
    }
    }
              
}

proc purple(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 30 ; 
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.466 0.200 0.892; 
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 1 ;
    setAttr ($jnts + ".overrideColor") 30 ; 
    setAttr ($jnts + ".useOutlinerColor") 1 ;
    setAttr ($jnts + ".outlinerColor")0.466 0.200 0.892; 
    }
    }
              
}



proc nocolor(){
    
    if (`radioButtonGrp -q -select colorRadio` == 1) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled") 0 ;
    }          
    }
   
    else if (`radioButtonGrp -q -select colorRadio` == 2) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".useOutlinerColor") 0 ;
    }
    }
        
    else if (`radioButtonGrp -q -select colorRadio` == 3) {
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    setAttr ($jnts + ".overrideEnabled")0 ;
    setAttr ($jnts + ".useOutlinerColor")0 ;
    }
    }
              
}


proc incrementName(){
    
    string $value = `textField -q -tx tfSuffix`;
    string $selJnts[] = `ls -selection -flatten`;
    for($jnts in $selJnts){
    select $jnts;
    renameSelectionList $value;
    
    }          

              
}



//SHAPES--------------------------------------------------------------------
proc square(){
   string $sqr = `curve -d 1 -p -1.456834653e-016 -1 1 -p 1.456834653e-016 1 1 -p 1.456834653e-016 1 -1 -p -1.456834653e-016 -1 -1 -p -1.456834653e-016 -1 1  -n "square"`; 
setAttr ($sqr + ".rotateY") 90 ; 
FreezeTransformations;
    
}


proc cube(){
    
curve -d 1 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.499886 -p 0.498585 0.5 0.5 
-p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.498802 -0.5 -0.5 
-p -0.5 -0.499632 0.5 -p -0.5 0.5 0.499886 -p 0.5 0.5 0.5 
-p 0.5 -0.492074 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 
-p 0.5 -0.5 -0.5 -p 0.5 -0.492602 0.5 -p 0.5 0.5 0.5 
-p -0.499904 0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 
-p 0.5 -0.5 -0.5 -p 0.499034 0.5 -0.5 -p -0.5 0.5 -0.5 
-p -0.5 0.5 0.5 -p 0.498947 0.5 0.5 -p 0.5 -0.495186 0.5 
-k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 
-k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 
-k 20 -k 21 -k 22 -k 23 -name cube;

}

proc arrow(){
curve -d 1 -p -0.25 0 0 -p -0.25 0 -1 -p -0.5 0 -1 -p 0 0 -1.5 -p 0.5 0 -1 
-p 0.25 0 -1 -p 0.25 0 0 -p -0.25 0 0 -k 0 
-k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -name arrow;
}




proc pin(){
    $c = `curve -d 1 -p 0 0.7074835877 0 -p -1.779797547e-017 0.7183189811 0.08015495567 -p -3.439014528e-017 0.7492709624 0.1548794455 -p -4.867644528e-017 0.7982872269 0.2192192208 -p -5.95602423e-017 0.862627002 0.268235485 -p -6.643296284e-017 0.9373514918 0.2991874667 -p -6.883890347e-017 1.017506448 0.31002286 -p -6.643296284e-017 1.097661403 0.2991874667 -p -5.95602423e-017 1.172385679 0.268235485 -p -4.867644528e-017 1.236725668 0.2192192208 -p -3.439014528e-017 1.285741718 0.1548794455 -p -1.779797547e-017 1.316694129 0.08015495567 -p 0 1.327526732 0 -p 1.779797547e-017 1.316694129 -0.08015495567 -p 3.439014528e-017 1.285741718 -0.1548794455 -p 4.867644528e-017 1.236725668 -0.2192192208 -p 5.95602423e-017 1.172385679 -0.268235485 -p 6.643296284e-017 1.097661403 -0.2991874667 -p 6.883890347e-017 1.017506448 -0.31002286 -p 6.643296284e-017 0.9373514918 -0.2991874667 -p 5.95602423e-017 0.862627002 -0.268235485 -p 4.867644528e-017 0.7982872269 -0.2192192208 -p 3.439014528e-017 0.7492709624 -0.1548794455 -p 1.779797547e-017 0.7183189811 -0.08015495567 -p 0 0.7074835877 0 -p 0 0.006634036807 0 -name pin`;
		
}

proc orient(){
    
    $c = `curve -d 3 -p -0.604001 0.0959835 -0.0987656 -p -0.500458 0.500783 -0.0987656 -p -0.327886 0.751175 -0.0987656 -p -0.327886 0.751175 -0.0987656 -p -0.327886 0.751175 -0.336638 -p -0.327886 0.751175 -0.336638 -p 2.223925488e-016 1.001567 0 -p 2.223925488e-016 1.001567 0 -p -0.327886 0.751175 0.336638 -p -0.327886 0.751175 0.336638 -p -0.327886 0.751175 0.0987656 -p -0.327886 0.751175 0.0987656 -p -0.500458 0.500783 0.0987656 -p -0.604001 0.0959835 0.0987656 -p -0.604001 0.0959835 0.0987656 -p -0.500458 0.0959835 0.500783 -p -0.327886 0.0959835 0.751175 -p -0.327886 0.0959835 0.751175 -p -0.327886 0.336638 0.751175 -p -0.327886 0.336638 0.751175 -p 0 0 1.001567 -p 0 0 1.001567 -p -0.327886 -0.336638 0.751175 -p -0.327886 -0.336638 0.751175 -p -0.327886 -0.0959835 0.751175 -p -0.327886 -0.0959835 0.751175 -p -0.500458 -0.0959835 0.500783 -p -0.604001 -0.0959835 0.0987656 -p -0.604001 -0.0959835 0.0987656 -p -0.500458 -0.500783 0.0987656 -p -0.327886 -0.751175 0.0987656 -p -0.327886 -0.751175 0.0987656 -p -0.327886 -0.751175 0.336638 -p -0.327886 -0.751175 0.336638 -p -2.223925488e-016 -1.001567 0 -p -2.223925488e-016 -1.001567 0 -p -0.327886 -0.751175 -0.336638 -p -0.327886 -0.751175 -0.336638 -p -0.327886 -0.751175 -0.0987656 -p -0.327886 -0.751175 -0.0987656 -p -0.500458 -0.500783 -0.0987656 -p -0.604001 -0.0959835 -0.0987656 -p -0.604001 -0.0959835 -0.0987656 -p -0.500458 -0.0959835 -0.500783 -p -0.327886 -0.0959835 -0.751175 -p -0.327886 -0.0959835 -0.751175 -p -0.327886 -0.336638 -0.751175 -p -0.327886 -0.336638 -0.751175 -p 0 0 -1.001567 -p 0 0 -1.001567 -p -0.327886 0.336638 -0.751175 -p -0.327886 0.336638 -0.751175 -p -0.327886 0.0959835 -0.751175 -p -0.327886 0.0959835 -0.751175 -p -0.500458 0.0959835 -0.500783 -p -0.604001 0.0959835 -0.0987656 -name orient`;
		
}

proc coneShape(){
    $c = `curve -d 1 -p 0.002873577054 -0.2497454755 0.4325716493 -p 0.002873577054 0.2497454755 0.4325716493 -p 1.001855479 -6.67369812e-016 -1.436788527e-009 -p 0.002873577054 -0.2497454755 0.4325716493 -p 0.002873577054 -0.4994909509 -1.436788527e-009 -p 1.001855479 -6.67369812e-016 -1.436788527e-009 -p 0.002873577054 -0.2497454755 -0.4325716522 -p 0.002873577054 -0.4994909509 -1.436788527e-009 -p 1.001855479 -6.67369812e-016 -1.436788527e-009 -p 0.002873577054 0.2497454755 -0.4325721517 -p 0.002873577054 -0.2497454755 -0.4325716522 -p 1.001855479 -6.67369812e-016 -1.436788527e-009 -p 0.002873577054 0.4994909509 -8.078092608e-008 -p 0.002873577054 0.2497454755 -0.4325721517 -p 1.001855479 -6.67369812e-016 -1.436788527e-009 -p 0.002873577054 0.2497454755 0.4325716493 -p 0.002873577054 0.4994909509 -8.078092608e-008 -n "cone"`;
		
}


proc crossShape(){
    
   $c = `curve -d 1 -p 0 0 -0.9857426965 -p -0.2950522357 0 -0.543164343 -p -0.1475261178 0 -0.543164343 -p -0.1475261178 0 -0.1475261178 -p -0.543164343 0 -0.1475261178 -p -0.543164343 0 -0.2950522357 -p -0.9857426965 0 0 -p -0.543164343 0 0.2950522357 -p -0.543164343 0 0.1475261178 -p -0.1475261178 0 0.1475261178 -p -0.1475261178 0 0.543164343 -p -0.2950522357 0 0.543164343 -p 0 0 0.9857426965 -p 0.2950522357 0 0.543164343 -p 0.1475261178 0 0.543164343 -p 0.1475261178 0 0.1475261178 -p 0.543164343 0 0.1475261178 -p 0.543164343 0 0.2950522357 -p 0.9857426965 0 0 -p 0.543164343 0 -0.2950522357 -p 0.543164343 0 -0.1475261178 -p 0.1475261178 0 -0.1475261178 -p 0.1475261178 0 -0.543164343 -p 0.2950522357 0 -0.543164343 -p 0 0 -0.9857426965 -n "cross"`;
			
}


proc rotShape(){
    
    $c = `curve -d 3 -p -0.35703261 0 0.63881379 -p -0.35703261 0 0.63881379 -p -0.35703261 0 0.63881379 -p -0.43555158 0 0.28326996 -p -0.43555158 0 0.28326996 -p -0.43555158 0 0.28326996 -p -0.43555158 0 0.28326996 -p -0.10092762 0 0.88816986 -p -0.10092762 0 0.88816986 -p -0.10092762 0 0.88816986 -p -0.10092762 0 0.88816986 -p -0.79049277 0 0.83941839 -p -0.79049277 0 0.83941839 -p -0.79049277 0 0.83941839 -p -0.79049277 0 0.83941839 -p -0.45433386 0 0.76645116 -p -0.45433386 0 0.76645116 -p -0.45433386 0 0.76645116 -p -0.45433386 0 0.76645116 -p -0.64641969 0 0.64640673 -p -0.84458862 0 0.34986654 -p -0.91422432 0 0 -p -0.84458862 0 -0.34986654 -p -0.64641969 0 -0.64640673 -p -0.45283779 0 -0.76484979 -p -0.45283779 0 -0.76484979 -p -0.45283779 0 -0.76484979 -p -0.45283779 0 -0.76484979 -p -0.79049277 0 -0.83941839 -p -0.79049277 0 -0.83941839 -p -0.79049277 0 -0.83941839 -p -0.79049277 0 -0.83941839 -p -0.10092762 0 -0.88816986 -p -0.10092762 0 -0.88816986 -p -0.10092762 0 -0.88816986 -p -0.10092762 0 -0.88816986 -p -0.43555158 0 -0.28326996 -p -0.43555158 0 -0.28326996 -p -0.43555158 0 -0.28326996 -p -0.43555158 0 -0.28326996 -p -0.35575119 0 -0.63632061 -p -0.35575119 0 -0.63632061 -p -0.35575119 0 -0.63632061 -p -0.35575119 0 -0.63632061 -p -0.52874856 0 -0.52892838 -p -0.69110901 0 -0.28621998 -p -0.74792646 0 0 -p -0.69110901 0 0.28621998 -p -0.52874856 0 0.52892838 -p -0.35703261 0 0.63881379 -n "rotation"`;
		
    
}

proc sphereShape(){
    $c = `curve -d 1 -p 0 0.81 0 -p -0.30997323 0.7483428 0 -p -0.57275667 0.57275667 0 -p -0.7483428 0.30997323 0 -p -0.81 0 0 -p -0.7483428 -0.30997323 0 -p -0.57275667 -0.57275667 0 -p -0.30997323 -0.7483428 0 -p 0 -0.81 0 -p 0.30997323 -0.7483428 0 -p 0.57275667 -0.57275667 0 -p 0.7483428 -0.30997323 0 -p 0.81 0 0 -p 0.7483428 0.30997323 0 -p 0.57275667 0.57275667 0 -p 0.30997323 0.7483428 0 -p 0 0.81 0 -p 0 0.7483428 0.30997323 -p 0 0.57275667 0.57275667 -p 0 0.30997323 0.7483428 -p 0 0 0.81 -p 0 -0.30997323 0.7483428 -p 0 -0.57275667 0.57275667 -p 0 -0.7483428 0.30997323 -p 0 -0.81 0 -p 0 -0.7483428 -0.30997323 -p 0 -0.57275667 -0.57275667 -p 0 -0.30997323 -0.7483428 -p 0 0 -0.81 -p 0 0.30997323 -0.7483428 -p 0 0.57275667 -0.57275667 -p 0 0.7483428 -0.30997323 -p 0 0.81 0 -p -0.30997323 0.7483428 0 -p -0.57275667 0.57275667 0 -p -0.7483428 0.30997323 0 -p -0.81 0 0 -p -0.7483428 0 0.30997323 -p -0.57275667 0 0.57275667 -p -0.30997323 0 0.7483428 -p 0 0 0.81 -p 0.30997323 0 0.7483428 -p 0.57275667 0 0.57275667 -p 0.7483428 0 0.30997323 -p 0.81 0 0 -p 0.7483428 0 -0.30997323 -p 0.57275667 0 -0.57275667 -p 0.30997323 0 -0.7483428 -p 0 0 -0.81 -p -0.30997323 0 -0.7483428 -p -0.57275667 0 -0.57275667 -p -0.7483428 0 -0.30997323 -p -0.81 0 0 -p -0.81 0 0 -n "sphere"`;	
    
}

proc moveShape(){
    curve -d 3 -p -4 0 1 -p -4 0 1 -p -4.5 0 1 -p -4.5 0 1 -p -4.5 0 1 -p -4.5 0 1.5 -p -4.5 0 1.5 -p -4.5 0 1.5 -p -6 0 -1.998401444e-14 -p -6 0 -1.998401444e-14 -p -6 0 -1.998401444e-14 -p -4.5 0 -1.5 -p -4.5 0 -1.5 -p -4.5 0 -1.5 -p -4.5 0 -1 -p -4.5 0 -1 -p -4.5 0 -1 -p -4 0 -1 -p -4 0 -1 -p -4 0 -1 -p -3.5 0 -3.5 -p -1 0 -4 -p -1 0 -4 -p -1 0 -4.5 -p -1 0 -4.5 -p -1 0 -4.5 -p -1.5 0 -4.5 -p -1.5 0 -4.5 -p -1.5 0 -4.5 -p 0 0 -6 -p 0 0 -6 -p 0 0 -6 -p 1.5 0 -4.5 -p 1.5 0 -4.5 -p 1.5 0 -4.5 -p 1 0 -4.5 -p 1 0 -4.5 -p 1 0 -4.5 -p 1 0 -4 -p 1 0 -4 -p 1 0 -4 -p 3.5 0 -3.5 -p 4 0 -1 -p 4 0 -1 -p 4.5 0 -1 -p 4.5 0 -1 -p 4.5 0 -1 -p 4.5 0 -1.5 -p 4.5 0 -1.5 -p 4.5 0 -1.5 -p 6 0 -5.995204333e-15 -p 6 0 -5.995204333e-15 -p 6 0 -5.995204333e-15 -p 4.5 0 1.5 -p 4.5 0 1.5 -p 4.5 0 1.5 -p 4.5 0 1 -p 4.5 0 1 -p 4.5 0 1 -p 4 0 1 -p 4 0 1 -p 4 0 1 -p 3.5 0 3.5 -p 1 0 4 -p 1 0 4 -p 1 0 4.5 -p 1 0 4.5 -p 1 0 4.5 -p 1.5 0 4.5 -p 1.5 0 4.5 -p 1.5 0 4.5 -p 1.139292912e-14 0 6 -p 1.139292912e-14 0 6 -p 1.139292912e-14 0 6 -p -1.5 0 4.5 -p -1.5 0 4.5 -p -1.5 0 4.5 -p -1 0 4.5 -p -1 0 4.5 -p -1 0 4.5 -p -1 0 4 -p -1 0 4 -p -1 0 4 -p -3.5 0 3.5 -p -4 0 1 -p -4 0 1 -p -4 0 1 -p -4 0 1 -n "move";

}

//Append functions------------------------------------------------------------------------------------------------------------------------------------------------




proc leftAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_left"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_left");}
        
        }          
}


proc rightAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_right"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_right");}
        
        }          
}


proc upAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_top"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_top");}
        
        }          
}


proc bottomAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_bottom"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_bottom");}
        
        }          
}

proc middleAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_center"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_center");}
        
        }          
}

proc ikAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_IK"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_IK");}
        
        }          
}

proc fkAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_FK"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_FK");}
        
        }          
}
  
proc lAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_L"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_L");}
        
        }          
}

proc rAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_R"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_R");}
        
        }          
}
 
proc jointAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_joint"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_joint");}
        
        }          
}
 
proc backAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_back"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_back");}
        
        }          
}
 
proc frontAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_front"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_front");}
        
        }          
}

proc blueAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_blue"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_blue");}
        
        }          
}
 
proc redAppend(){
    
    if (`radioButtonGrp -q -select nameRadio` == 1) {
            $value = `textField -query -tx tfSuffix`;
            rename ($value + "_red"); 
            
            }
   
    else if (`radioButtonGrp -q -select nameRadio` == 2) {
        
        string $selThings[] = `ls -selection -flatten`;
        for($things in $selThings){
        select $things;
        rename ($things + "_red");}
        
        }          
}



//End-----------------------------------------------------

 
proc string stringReplace(string $str, string $search, string $replace)
{
    string $retstr = "";

    	// Sanity check please!
    if ($search == "")
        return $str;
    
    if ($str == "")
        return $str;
        
        
    int $len = size($str);
    int $lenS = size($search);
    
    int $i, $j;
    int $match;
    
    for ($i=1; $i <= $len; ++$i)
        {
	$match = 0;

	// Now get substring from where we are currently
	// to the number of letters past of the length
	// of the search string.  Basically the same
	// length as the search string.  So if it is identical
	// we know we have a match.
	//
	// If not, we don't.  We also make sure we aren't
	// trying to look past the end of the string...
	//
	$j = $i + ($lenS - 1);

	if ($j <= $len)
	    {
	    string $part = `substring $str $i $j`;
	    if ($part == $search)
	        $match = 1;
	    }
	
	if ($match == 1)
	    {
	    $retstr += $replace; // we did it, so insert replace str
	    $i = $j;	// skip forward
	    }
	else
	    {
	    string $char = `substring $str $i $i`;
	    $retstr += $char;
	    }
	}

    return $retstr;
	
}

// --------------------------------------------------------------------------

/*
 * getShortName() - Given a string, get last part after last | pipe.
 */
proc string getShortName(string $obj)
{
    string $ret = "";
    
    if ($obj == "")
        return $ret;
        
    string $parts[];
    int $cnt = tokenize($obj, "|", $parts);
    
    if ($cnt <= 0)
        $ret = $obj;
    else
        $ret = $parts[($cnt-1)];
    
    return $ret;
}

// --------------------------------------------------------------------------

/*
 * chop() - Removes last char
 */
proc string chop(string $str)
{
    string $ret = "";

    int $cnt = size($str);
    
    if ($cnt <= 1)
        return $ret;
    
    $ret = `substring $str 1 ($cnt-1)`;

    return $ret;
}

// --------------------------------------------------------------------------

/*
 * cR_doRename() - Does real work of renaming selected objects
 *
 *    $mode:  0=S&R 1=Pre 2=Suf 3=R&N
 */
global proc cR_doRename(int $mode)
{
    string $objs[] = `ls -sl -long`;
    int $objCnt = size($objs);
    int $i;

	// Get all UI data...
	//
    string $search = `textField -q -tx tfSuffix`;
    string $replace = `textField -q -tx tfReplace`;
    string $prefix = `textField -q -tx tfSuffix`;
    string $suffix = `textField -q -tx tfSuffix`;
    string $rename = `textField -q -tx tfSuffix`;
    int $start = `intField -q -v ifNumber`;
    int $padding = `intField -q -v ifPadding`;
    
    string $shortName;
    string $newShortName;
    string $newName;

	// Now do it
	//
    for ($i=0; $i < $objCnt; ++$i)
        {
	$obj = $objs[$i];
	
	$shortName = getShortName($obj);
		
	switch ($mode)
	    {
	    case 0:
	        if ($search == "")
	            {
	            warning -sl 0 ("Can't search and replace, search entry field is blank!");
	            return;
	            }
	        $newShortName = stringReplace($shortName, $search, $replace);
	        break;

	    case 1:
	        if ($prefix == "")
	            {
	            warning -sl 0 ("Can't add prefix, prefix entry field is blank!");
	            return;
	    	    }
	        $newShortName = ($prefix + $shortName);
	        break;

	    case 2:
	        if ($suffix == "")
	            {
	            warning -sl 0 ("Can't add suffix, suffix entry field is blank!");
	            return;
	    	    }
	        $newShortName = ($shortName + $suffix);
	        break;

	    case 3:
	        if ($rename == "")
	            {
	            warning -sl 0 ("Can't rename and number, rename entry field is blank!");
	            return;
	            }
	    		// get index of string as user wants
	    	int $n = $i + $start;
	    		// pad of 0's
	    	string $padStr = "";
	    	
	    		// Add padding as needed
	    	for ($p=1; $p < $padding; ++$p)
	    	    {
		    if ($n < pow(10, $p) )
		        $padStr += "0";
		    }
	    	
	    	$newShortName = ($rename+$padStr+$n);
	        break;

	    } // end of switch
		
	
	$newName = `rename $obj $newShortName`;
	select -r $newName;
	string $newLongNames[] = `ls -sl -long`;
	string $newLongName = $newLongNames[0];
	
	    // Now update rest of stuff in list in case |long|names
	    // required it
	for ($j=0; $j < $objCnt; ++$j)
	    {
	    string $tmp = $objs[$j];

	    $tmp += "|";	// add to end for easy replacing
	    $tmp = `substitute ($obj+"|") $tmp ("|"+$newLongName+"|")`;
	    $tmp = chop($tmp);
	    
	    $objs[$j] = $tmp;
	    }
	

	}  // end of for all objs

    select $objs;
    
}


// ---------------------------------------------------------------------------
